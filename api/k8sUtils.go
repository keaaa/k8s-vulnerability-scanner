package main

import (
	"os"

	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/rest"
	"k8s.io/client-go/tools/clientcmd"
)

func getClientSet() *kubernetes.Clientset {
	config, err := getOutOfClusterConfig()
	if err != nil {
		config, err = rest.InClusterConfig()
		if err != nil {
			panic(err.Error())
		}
	}

	// creates the clientset
	clientset, err := kubernetes.NewForConfig(config)
	if err != nil {
		panic(err.Error())
	}
	return clientset
}

func getInClusterConfig() (*rest.Config, error) {
	return rest.InClusterConfig()
}

func getOutOfClusterConfig() (*rest.Config, error) {
	kubeConfigPath := os.Getenv("HOME") + "/.kube/config"
	return clientcmd.BuildConfigFromFlags("", kubeConfigPath)
}
