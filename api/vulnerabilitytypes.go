package main

import (
	"time"
)

type Severity string

const (
	Critical Severity = "CRITICAL"
	High              = "HIGH"
	Medium            = "MEDIUM"
	Low               = "LOW"
	Unknown           = "UNKNOWN"
)

type VulnerabilityRun struct {
	RunID        int
	MeasuredTime time.Time
	Targets      []Target
}

type Pod struct {
	Name      string
	Namespace string
}

type ImageSummary struct {
	ID               int
	Name             string
	Target           string
	RunID            int
	MeasuredTimeUTC  time.Time
	CriticalSeverity int
	HighSeverity     int
	MediumSeverity   int
	LowSeverity      int
	UnknownSeverity  int
}

type Target struct {
	Target           string
	Image            string
	MeasuredTime     *time.Time
	CriticalSeverity int
	HighSeverity     int
	MediumSeverity   int
	LowSeverity      int
	UnknownSeverity  int
	Pods             []Pod
	Vulnerabilities  []Vulnerability
}

func (target Target) countBySeverity(severity Severity) int {
	nrVulnerabilities := 0
	for _, vul := range target.Vulnerabilities {
		if vul.Severity == severity {
			nrVulnerabilities++
		}
	}
	return nrVulnerabilities
}

type Vulnerability struct {
	VulnerabilityID  string
	PkgName          string
	InstalledVersion string
	LayerID          string
	Title            string
	Description      string
	Severity         Severity
	References       []string
}
