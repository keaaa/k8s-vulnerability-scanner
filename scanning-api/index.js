require("dotenv").config();
const express = require("express");
const bodyParser = require("body-parser");
const storageAccount = require("./storage");

const storage = storageAccount.vulnerabilities();
const app = express();

// TODO: error handling in general
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());

app.get("/images", (req, res) => {
  storage.getImages(function (todos, err) {
    if (err) {
      res.status(500);
      res.end();
    } else {
      res.json(todos);
    }
  });
});

app.get("/images/:image/vulnerabilities", (req, res) => {
  storage.getVulnerabilitiesByImage(req.params.image, function (
    vulnerabilities,
    err
  ) {
    if (err) {
      res.status(500);
      res.end();
    } else {
      res.json(vulnerabilities);
    }
  });
});

app.post("/images/:image/vulnerabilities", (req, res) => {
  const image = req.params.image;
  storage.deleteVulnerabilityByImage(image, function () {
    const vulnerabilities = req.body.map((target) => {
      return {
        Image: image,
        Target: target.Target,
        Vulnerabilities: target.Vulnerabilities,
      };
    });
    vulnerabilities.forEach((vul) => storage.saveVulnerability(vul));
    res.end();
  });
});

// app.put("/todos/:todoId", (req, res) => {
//   storage.saveTodo(req.body);
//   res.end();
// });

// app.delete("/todos/:todoId", (req, res) => {
//   storage.deleteTodo(req.params.todoId);
//   res.end();
// });

app.listen(3000, () => {
  storage.bootstrap();

  console.log("Server running on port 3000");
});
